/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DataProvider } from "./DataProvider";

export class DataProviderFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(weth: string, overrides?: Overrides): Promise<DataProvider> {
    return super.deploy(weth, overrides || {}) as Promise<DataProvider>;
  }
  getDeployTransaction(
    weth: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(weth, overrides || {});
  }
  attach(address: string): DataProvider {
    return super.attach(address) as DataProvider;
  }
  connect(signer: Signer): DataProviderFactory {
    return super.connect(signer) as DataProviderFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DataProvider {
    return new Contract(address, _abi, signerOrProvider) as DataProvider;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "chainlinkRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feed",
        type: "address",
      },
    ],
    name: "addChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getChainlinkFeed",
    outputs: [
      {
        internalType: "address",
        name: "_feed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108713803806108718339818101604052602081101561003357600080fd5b505160006100486001600160e01b036100b716565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b03929092169190911790556100bb565b3390565b6107a7806100ca6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146101215780639db2fe0914610129578063ea0129ca1461014f578063f2fde38b1461017557610088565b80633fc8cef31461008d57806341976e09146100b1578063715018a6146100e957806381cab8c6146100f3575b600080fd5b61009561019b565b604080516001600160a01b039092168252519081900360200190f35b6100d7600480360360208110156100c757600080fd5b50356001600160a01b03166101aa565b60408051918252519081900360200190f35b6100f16101c8565b005b6100f16004803603604081101561010957600080fd5b506001600160a01b038135811691602001351661027c565b610095610314565b6100956004803603602081101561013f57600080fd5b50356001600160a01b0316610323565b6100956004803603602081101561016557600080fd5b50356001600160a01b031661033e565b6100f16004803603602081101561018b57600080fd5b50356001600160a01b03166103b5565b6002546001600160a01b031690565b6000806101b68361033e565b90506101c1816104bf565b9392505050565b6101d0610647565b6000546001600160a01b03908116911614610232576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610284610647565b6000546001600160a01b039081169116146102e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6000546001600160a01b031690565b6001602052600090815260409020546001600160a01b031681565b6001600160a01b038181166000908152600160205260408120549091166103965760405162461bcd60e51b815260040180806020018281038252602881526020018061074a6028913960400191505060405180910390fd5b506001600160a01b039081166000908152600160205260409020541690565b6103bd610647565b6000546001600160a01b0390811691161461041f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104645760405162461bcd60e51b81526004018080602001828103825260268152602001806107246026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080829050600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561050157600080fd5b505afa158015610515573d6000803e3d6000fd5b505050506040513d60a081101561052b57600080fd5b50602081015160609091015190925090506000821215610586576040805162461bcd60e51b81526020600482015260116024820152705072696365206973206e6567617469766560781b604482015290519081900360640190fd5b600081116105d0576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b604482015290519081900360640190fd5b61063e82846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561060d57600080fd5b505afa158015610621573d6000803e3d6000fd5b505050506040513d602081101561063757600080fd5b505161064b565b95945050505050565b3390565b60006106678361065f60128560ff16610670565b600a0a6106c0565b90505b92915050565b8082038281111561066a576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b60008115806106db575050808202828282816106d857fe5b04145b61066a576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734665656420646f6573206e6f7420657869737420696e20636861696e6c696e6b5265676973747279a26469706673582212204a9eddfa88bb6195656bc42107cb8cc0095cf00ff22b3267a716e68d1882194564736f6c63430006080033";
